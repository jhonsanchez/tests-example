/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.util.concurrent.*;

public class UnitTestApp {
    private static final String FRIDAY = "Friday";
    private final DayService dayService;

    public UnitTestApp(DayService dayService) {
        this.dayService = dayService;
    }

    public String isFriday(String day) {
        if (FRIDAY.equalsIgnoreCase(day)) {
            return "TGIF!";
        }
        return "Nope";
    }

    public String isFriday() {
        String day = dayService.getDay();
        return isFriday(day);
    }

    public String isFridayWithTimeout() {
        ExecutorService executor = Executors.newVirtualThreadPerTaskExecutor();
        CompletableFuture<String> future = CompletableFuture.supplyAsync(dayService::getDay, executor);
        try {
            String day = future.get(30, TimeUnit.SECONDS);
            return isFriday(day);
        } catch (Exception e) {
            return "Nope";
        }
    }
    public static void main(String[] args) {
        DayService dayService = new DayService();
        UnitTestApp unitTestApp = new UnitTestApp(dayService);
        System.out.println(unitTestApp.isFriday());
        System.out.println(unitTestApp.isFriday());
    }

}
